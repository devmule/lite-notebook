>>> md

# Улучшение: Нейроны смещения

___

### Зачем оно нам надо???

ИНС с внедрёнными нейронами смещения быстрее обучаются.
А ещё введение нейрона смещения способствует уменьшению количества необходимых для работы персептрона нейронов.


**Нейрон смещения** это почти такой же нейрон что и остальные.
От остальных нейронов нейрон смещения отличается только тем, что имеет соединение только с одним единственным нейроном.

![bias](bias.jpg?style=center)

Регулирование значения нейрона смещения дает возможность сдвинуть функцию активации по оси X и достичь ранее
недоступные участки, не изменяя веса синапсов. Сравни два рисунка ниже!

![bias](s1.png) ![bias](s2.png)

### Как можно представить нейроны смещения для слоя?

Нейрон смещения существет для каждого нейрона кроме входного. Слои нейронов представлены в виде векторов, значит
нейроны смещения для слоя можно представить в виде вектора с таким же размером как и сам слой
нейронов - по одному нейрону смещения на обычный нейрон!

**z** - неактивированные значения нейронов, **b** - нейроны смещения.

![bias](zb.png?style=center)

### Почему он без своего синапса?

Подразумевается что нейрон смещения всегда активирован.

Перемножая нейрон с синапсом получается значение x∈(-∞; +∞).
Т.к. нейрон смещения имеет соединение только с одним нейроном, то он сам по себе может иметь значения b∈(-∞; +∞),
как будто тут не просто нейрон а нейрон с синапсом. Вот такие вот математические фокусы.

___

## Нейрон смещения при прямом распространении

>>> fetch
text: ff_txt = ff.py
text: bp_txt = bp.py

>>> code id=ff
>>> md

___

## Нейрон смещения при обратном распространении ошибки

>>> code id=bp
>>> md


>>> js
    var ff = ace.edit("ff");
    ff.getSession().setValue(ff_txt);
    ff.setOptions({maxLines: 60, minLines: 8});

    var bp = ace.edit("bp");
    bp.getSession().setValue(bp_txt);