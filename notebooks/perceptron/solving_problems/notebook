>>> md

# Решение задач

Теперь мы воспользуемся созданным персептроном чтобы решить задачу Титаник.

Ниже расположен полный код реализованного персептрона, ты можешь модифицировать его как захочешь.

В самом низу есть отдельное поле для настройки и тестирования по тестовой выборке.

>>> code id=dt_full_editor

>>> md

Если хочешь, ты можешь скачать и посмотреть **CSV** файлы с [тестовой](titanic_test.csv) выборкой и [обучающей](titanic_learn.csv) выборкой.

Твоя задача - на обучающей выборке научить персептрон определять вероятность пассажира выжить при крушении, а на
тестовой выборке понять с какой точностью работает твоя модель.

**Важно!** персептрон не умеет работать с текстовыми и неполными данными! переведи их в числовой вид :)
[Вот моё решение.](https://github.com/DevMule/perceptron.py/blob/master/tests/titanic.py)
Но там я использовал старую версию своего персептрона, так что просто скопировать и вставить не получится, придётся думать самостоятельно ))))

### Удачи!

>>> code id=test_editor

>>> fetch
text: dt_full_txt = pt_full.py
text: test_txt = test.py
text: t_test_txt = titanic_test.csv
text: t_learn_txt = titanic_learn.csv

>>> js

    var dt_full_editor = ace.edit("dt_full_editor");
    dt_full_editor.getSession().setValue(dt_full_txt);

    var test_editor = ace.edit("test_editor");
    test_editor.getSession().setValue(test_txt);


    let test_code_output = lite_notebook.elements.code_output();
    lite_notebook.screen.appendChild(test_code_output);
    test_code_output.attachEditor(test_editor);
    test_code_output.before_launch = () => {
        test_code_output.pre_codes = [
            dt_full_editor.getValue(),
        ];
        test_code_output.py_worker.addVariable("titanic_test", t_test_txt);
        test_code_output.py_worker.addVariable("titanic_learn", t_learn_txt);
    }