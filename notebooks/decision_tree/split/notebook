>>> md

# Разделение выборки

Дерево строится путём разбиения выборки на подвыборки.

### Как же выглядит разбиение?

Разбиение происходит по какому-либо критерию и величине этого критерия. Давайте-ка вернёмся к задаче "Ирисы Фишера".
Я вытащил немного данных из датасета, по три объекта на класс и составил из этого табличку.

Давайте посмотрим как мы можем разделить эту небольшую выборку:

Например, класс **setosa** в таблице ниже можно однозначно и с запасом отделить от остальных по критерию **длина лепестка**
по величине `2.5`, критерию **ширина лепестка** по величине `1.2`
или  критерию **Длина чашелистника** по величине `5.5`.

А вот с критерием **Ширина чашелистника** такого не выйдет **:)**

| Длина чашелистника | Ширина чашелистника | Длина лепестка | Ширина лепестка | класс ириса |
|:------------------:|:-------------------:|:--------------:|:---------------:|:-----------:|
| 5.1                | 3.5                 | 1.4            | 0.2             | setosa      |
| 5.3                | 3.7                 | 1.5            | 0.2             | setosa      |
| 5.0                | 3.3                 | 1.4            | 0.2             | setosa      |
| 6.3                | 3.3                 | 4.7            | 1.6             | versicolor  |
| 5.8                | 2.7                 | 3.9            | 1.2             | versicolor  |
| 6.0                | 2.7                 | 5.1            | 1.6             | versicolor  |
| 6.7                | 3.3                 | 5.7            | 2.1             | virginica   |
| 7.2                | 3.2                 | 6.0            | 1.8             | virginica   |
| 5.9                | 3.0                 | 5.1            | 1.8             | virginica   |


### Окей, человек интуитивно может найти предикат.
Но по какому конкретному алгоритму можно разбить выборку лучшим образом?

Можно сделать несколько разбиений и выбрать из них лучшее.
LearnID3 алгоритм, который мы изучаем, как раз подразумевает что нужно разделить выборку всеми возможными способами
и выбрать из них лучший способ.

Поэтому, кстати, LearnID3 алгоритм и является жадным. Он достаточно быстро работает с небольшими данными,
но о-о-о-о-о-о-о-о-о-о-о-о-ой как долго с большой выборкой. Ведь ему нужно перебрать все возможные способы разделения.

В общем, в биг дату ему дорога заказана.

Но мы будем реализовывать именно его, а значит нам нужно найти все возможные разбиения и выбрать лучшее.
Определять "лучшесть" разбиения будем по критерию Джини.

### Дайте код!

## Разбиение по предикату

Выборка делится на подвыборки по предикату, который представляет из себя сравнение одного из критериев
с каким-либо значением. Т.к. критерии и класс хранятся в виде списка, то сам критерий можно представить
как индекс - порядковый номер критерия в списке.

>>> code id=test_split_editor
>>> md

## А теперь выбираем лучшее разбиение

Я слегка намудрил и решил реализовать узлы дерева в виде классов. С ними работать удобно.


>>> code id=get_split_editor
>>> md

## Тестирование реализации

С кодом можно поиграться, поменять его, посмотреть как он будт вести себя.
Ты можешь менять код во всех редакторах на странице, это будет влиять на итоговое поведение программы.

>>> code id=test_editor run
>>> md

>>> fetch
text: gini_txt = gini.py
text: test_split_txt = test_split.py
text: get_split_txt = get_split.py
text: test_txt = test.py
>>> js
    var test_split_editor = ace.edit("test_split_editor");
    test_split_editor.getSession().setValue(test_split_txt)

    var get_split_editor = ace.edit("get_split_editor");
    get_split_editor.getSession().setValue(get_split_txt)

    var test_editor = ace.edit("test_editor");
    test_editor.getSession().setValue(test_txt)

    let split_code_output = lite_notebook.elements.code_output();
    split_code_output.pre_codes.push(gini_txt);
    lite_notebook.screen.appendChild(split_code_output);
    split_code_output.attachEditor(test_editor);

    split_code_output.before_launch = () => {
        split_code_output.pre_codes = [
            gini_txt,
            test_split_editor.getValue(),
            get_split_editor.getValue(),
        ];
    }