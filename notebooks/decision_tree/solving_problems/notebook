>>> md

# Решение задач

Теперь мы воспользуемся созданным деревом чтобы попробовать решить полную задачу Ирисов Фишера.

Ниже расположен полный код нашего дерева, ты можешь модифицировать его как захочешь.

В самом низу есть отдельное поле для настройки дерева и тестирования по тестовой выборке.

>>> code id=dt_full_editor

>>> md

Теперь попробуй построить дерево так, чтобы при тестировании каждая строчка была `success`!
Я вырезал элементы тестовой выборки из общей, так что они не встречаются в датасете для обучения.

Если хочешь, ты можешь скачать и посмотреть **CSV** файлы с [тестовой](iris_test.csv) выборкой и [обучающей](iris_learn.csv) выборкой.

### Удачи!

>>> code id=test_editor

>>> fetch
text: dt_full_txt = dt_full.py
text: test_txt = test.py
text: iris_test_txt = iris_test.csv
text: iris_learn_txt = iris_learn.csv

>>> js

    var dt_full_editor = ace.edit("dt_full_editor");
    dt_full_editor.getSession().setValue(dt_full_txt);

    var test_editor = ace.edit("test_editor");
    test_editor.getSession().setValue(test_txt);


    let test_code_output = lite_notebook.elements.code_output();
    lite_notebook.screen.appendChild(test_code_output);
    test_code_output.attachEditor(test_editor);
    test_code_output.before_launch = () => {
        test_code_output.pre_codes = [
            dt_full_editor.getValue(),
        ];
        test_code_output.py_worker.addVariable("iris_test", iris_test_txt);
        test_code_output.py_worker.addVariable("iris_learn", iris_learn_txt);
    }