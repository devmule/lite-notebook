>>> md

### Что это такое и зачем оно нам надо?

Критерий Джини - это критерий ветвления. Он используется при построении дерева решений.

Дерево строится путём разбиения данной выборки на новые подвыборки на каждом узле,
за исключением терминального узла. Чем они отличаются мы рассматривали ранее.

Критерии ветвления определяют насколько "хорошо" была разбита выборка.
Ранее мы кратко рассматривали (и ужасались) несколько критериев ветвления.

Давайте рассморим **критерий Джини** подробнее:
## Критерий Джини

Критерий джини показывает сколько есть пар объектов, принадлежащих одному и тому же классу,
которые вместе идут в левую дочернюю вершину или в правую дочернюю вершину.
То есть, по итогу, у объектов должны совпадать метки классов и метки предикатов.

При идеальном разбиении, значение критерия Джини (индекс джини) принимает значение `0`.
В хучшем случае, когда элементы одного класса разделены по пропорции 50/50, индекс Джини равен `0.5`.


// todo картинка

Формула для критерия выглядит так:
$$I(\beta, X^ℓ) = \sharp \lbrace (X_i, X_j):\beta(X_i) = beta(X_j) \space и \space Y_i = Y_j \rbrace $$

Ну выглядит и выглядит. Чё бубнить то. Давайте лучше рассмотрим как она работает на примере:

Допустим, у нас есть готовое разделение - две подвыборки, в каждой по два элемента.
В первой подвыборке все объекты пренадлежат классу `0`, во второй все объекты пренадлежат классу `1`,
то есть это идеальное разбиение.

| подвыборка №1 | подвыборка №2 |
| ------------- | ------------- |
| класс = 0     | класс = 1     |
| класс = 0     | класс = 1     |

Для начала мы расчитаем пропорции классов в каждой подвыборке:
```
class_count = количество элементов данного класса в подвыборке
group_size = количество элементов всего в подвыборке
proportion = class_count / group_size

в подвыборке 1:
class_0 = 2 / 2 = 1
class_1 = 0 / 2 = 0

в подвыборке 2:
class_0 = 0 / 2 = 0
class_1 = 2 / 2 = 1
```
По пропорциям расчитываем индекс Джини для подвыборки.
```
total_samples = количество элементов всего в обеих подвыборках

gini = (1 - sum(proportion * proportion)) * (group_size/total_samples)

в подвыборке 1:
gini_1 = (1 - (1*1 + 0*0))) * 2/4 = 0 * 0.5 = 0

в подвыборке 2:
gini_2 = (1 - (0*0 + 1*1))) * 2/4 = 0 * 0.5 = 0
```
Индекс Джини для всего разделения можно получить сложив индексы Джини подвыборок: `0 + 0 = 0`.
Как мы и предполагали, он равен нулю. Если интересно, можешь так же расчитать Джини для разделения,
при котором в каждой подвыборке будут разные классы. Например:

| подвыборка №1 | подвыборка №2 |
| ------------- | ------------- |
| класс = 1     | класс = 0     |
| класс = 0     | класс = 1     |

В итоге должно получиться `0.5`.


## Реализация критерия Джини

Давайте займёмся реализацией критерия ветвления Джини на языке программирования Python3.
Для начала определимся со структурой записи параметров объектов.

Пусть у нас будет табличная запись параметров, а последний столбец будет определять класс объекта.

| параметр 1 | параметр 2 | ... | параметр n | класс |
| ---------- | ---------- | --- | ---------- |:-----:|
| 100        | 10         | ... | 123321     | 0     |
| 200        | 20         | ... | null       | 0     |
| 300        | +100500    | ... | 1          | 1     |

каждая строчка в таблице это один целый объект.

теперь сам код:

>>> fetch
text: gini_txt = gini.py
text: test_txt = test.py
>>> code id=gini_editor
>>> md

### Давай протестируем реализацию:

Вообще, если хочешь, можешь поправить код как сверху, так и снизу и посмотреть как он будет работать **:)**

>>> code id=test_editor
>>> js
    var gini_editor = ace.edit("gini_editor");
    gini_editor.getSession().setValue(gini_txt)

    var test_editor = ace.edit("test_editor");
    test_editor.getSession().setValue(test_txt)

    let gini_code_output = lite_notebook.elements.code_output();
    lite_notebook.screen.appendChild(gini_code_output);

    gini_code_output.attachEditor(test_editor);

    gini_code_output.before_launch = () => {
        gini_code_output.pre_codes = [gini_editor.getValue()];
    }

